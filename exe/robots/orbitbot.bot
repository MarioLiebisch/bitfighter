-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
--
-- OrbitBot, a simple robot that finds the nearest TestItem and orbits it
-- Note that this relies on line-of-sight navigation, so only good for open levels
--
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-- This is called by the robot's idle routine each tick.
-- This function must be present for the robot to work!

function getMove()

    if(closestItem == nil) then
    logprint("Searching...")
        closestItem = findClosest(bot:findGlobalItems(ShipType))
    end

    if(closestItem == nil) then return end
    if(not closestItem:isValid() ) then closestItem = nil; return end


    local botLoc = bot:getLoc()
    local itemLoc = closestItem:getLoc()

    local dist = botLoc:distanceTo( itemLoc )

    -- Here we use the getTime() function to make the motion look smooth.
    -- If we just advanced orbitAng by a fixed amount each frame, it would
    -- appear jerky, as each frame is a slightly different length.

    -- .0015 determined experimentally
    orbitAng = orbitAng + .0015 * bot:getTime()

    local dest

    if( dist <= orbitRadius * 1.1 ) then
        dest = itemLoc
        dest:setxy( itemLoc:x() + orbitRadius * math.cos (orbitAng),
                    itemLoc:y() + orbitRadius * math.sin (orbitAng)  )
    else
        dest = itemLoc
        orbitAng = botLoc:angleTo( dest )
    end

    bot:setThrustToPt( dest )         -- travel towards calculated point

    local closestShip = closestItem --findClosest(bot:findGlobalItems(ShipType))

    local sol = nil
    if(closestShip) then sol = getFiringSolution(closestShip) end -- Protect from nil using if
    if(sol) then bot:setAngle(sol) else bot:setAngle( botLoc:angleTo( itemLoc) ) end
    if(sol) then bot:fire() end
end

-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-- This function is called once and should return the robot's name

function getName()
    return( "OrbitBot")
end

-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-- Setup code here: this is run once when the robot is initialized, and
-- any variables set here will persist throughout the robot's life.  These
-- variables can be accessed from various functions defined in this file.
-------------------------------------------------------------------------------
-- Global variables


-- Other initialization code
--bot:logprint( "Hello, I'm "..getName() )        -- Print a message to the game log
orbitAng = 0
orbitRadius = 300
closestItem = nil
